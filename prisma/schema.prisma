// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  name     String
  email    String     @unique
  password String
  role     MemberType

  @@map("users")
}

model Member {
  id                 Int                  @id @default(autoincrement())
  name               String
  email              String               @unique
  birthDate          DateTime
  username           String               @unique
  cpf                String?
  rg                 String?
  passport           String?
  phone              String
  lsdEmail           String               @unique
  secondaryEmail     String?
  memberType         MemberType
  lattes             String               @unique
  roomName           String
  hasKey             Boolean?             @default(false)
  isActive           Boolean?             @default(false)
  isBrazilian        Boolean?             @default(true)
  ProjectAssociation ProjectAssociation[]

  @@map("members")
}

enum MemberType {
  ADMIN
  STUDENT
  SUPPORT
  PROFESSOR
  EXTERNAL
}

model Project {
  id            Int       @id @default(autoincrement())
  name          String
  creationDate  DateTime
  endDate       DateTime?
  building      String?
  room          String?
  embrapii_code String?
  financier     String?
  isActive      Boolean   @default(true)

  ProjectAssociation ProjectAssociation[]
}

enum Role {
  ADMIN
  STUDENT
  SUPPORT
  PROFESSOR
  EXTERNAL
}

model ProjectAssociation {
  id        Int       @id @default(autoincrement())
  project   Project   @relation(fields: [projectId], references: [id])
  member    Member    @relation(fields: [memberId], references: [id])
  projectId Int
  memberId  Int
  startDate DateTime
  endDate   DateTime?

  @@unique([projectId, memberId])
}

model ActivityRecord {
  id Int @id @default(autoincrement())
  operation OperationType
  entity EntityTipe
  newValue Json
  oldValue Json?
  idEntity Int
  user String  
  date DateTime
}

enum OperationType{
  CREATE
  UPDATE
}

enum EntityTipe{
  PROJECT
  MEMBER
  SERVICES
  SERVICE_ASSOCIATION
  PROJECT_ASSOCIATION
}
